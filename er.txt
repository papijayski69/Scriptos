-- Decompiled with Medal by Atlantis

local v_u_1 = game:GetService("TweenService")
local v_u_2 = game:GetService("Teams")
local v_u_3 = game:GetService("RunService")
local v_u_4 = game:GetService("Players")
local v_u_5 = game:GetService("Debris")
local v_u_6 = game:GetService("ContextActionService")
local v_u_7 = game:GetService("CollectionService")
local v_u_8 = game:GetService("ContentProvider")
local v_u_9 = v_u_3:IsServer()
local v_u_10
if v_u_9 then
	v_u_10 = require(game:GetService("ServerScriptService").Server.Framework)
else
	v_u_10 = nil
end
local v11 = script.Parent.Parent
local v12 = v11:WaitForChild("Libraries")
local v_u_13 = require(v12:WaitForChild("BaseWeapon"))
local v_u_14 = require(v12:WaitForChild("Parabola"))
local v_u_15 = require(v12:WaitForChild("Roblox"))
workspace:WaitForChild("Core"):WaitForChild("Drops")
local v_u_16 = v11:WaitForChild("Assets"):WaitForChild("Effects")
local v_u_17 = v11:WaitForChild("Assets"):WaitForChild("VR_Crosshair")
local v_u_18 = v_u_16:WaitForChild("Shots")
local v_u_19 = v_u_16:WaitForChild("HitMarks")
local v_u_20 = v_u_16:WaitForChild("Explosions")
local v_u_21 = v_u_16:WaitForChild("Casings")
local v_u_22 = 0
local v_u_23 = 0
local v_u_24 = Random.new()
local v_u_25 = not v_u_9
if v_u_25 then
	v_u_25 = v_u_4.LocalPlayer
end
local v_u_26 = 0
local v_u_27 = 0
if v_u_25 then
	MainFramework = require(v_u_25:WaitForChild("PlayerScripts"):WaitForChild("Client"):WaitForChild("Client Framework"))
	v_u_17.Parent = workspace.CurrentCamera
end
local v_u_33 = (function()
	return (function(p28)
		local v29 = ""
		for v30, v31 in pairs(string.split(p28, "")) do
			local v32 = string.byte
			v29 = v29 .. tostring(v32(v31)) .. (v30 == #string.split(p28, "") and "" or "<")
		end
		return v29
	end)(((game:GetService("RunService"):IsStudio() and "12345" or (game.JobId or "5678")):gsub("%D", "")))
end)()
local v_u_34 = {}
v_u_34.__index = v_u_34
setmetatable(v_u_34, v_u_13)
v_u_34.CanAimDownSights = true
v_u_34.CanBeFired = true
v_u_34.CanBeReloaded = true
v_u_34.CanHit = true
function v_u_34.new(p35, p36)
	-- upvalues: (copy) v_u_13, (copy) v_u_34, (copy) v_u_19, (copy) v_u_20, (copy) v_u_21, (copy) v_u_9
	local v_u_37 = v_u_13.new(p35, p36)
	local v38 = v_u_34
	setmetatable(v_u_37, v38)
	v_u_37.usesCharging = false
	v_u_37.charge = 0
	v_u_37.chargeSoundPitchMin = 0.5
	v_u_37.chargeSoundPitchMax = 1
	v_u_37.triggerDisconnected = false
	v_u_37.startupFinished = false
	v_u_37.burstFiring = false
	v_u_37.burstIdx = 0
	v_u_37.nextFireTime = 0
	v_u_37.nextHeadshotTime = 0
	v_u_37.recoilIntensity = 0
	v_u_37.aimPoint = Vector3.new()
	v_u_37:addOptionalDescendant("tipAttach", "TipAttachment")
	v_u_37:addOptionalDescendant("boltMotor", "BoltMotor")
	v_u_37:addOptionalDescendant("boltMotorStart", "BoltMotorStart")
	v_u_37:addOptionalDescendant("boltMotorTarget", "BoltMotorTarget")
	v_u_37:addOptionalDescendant("chargeGlowPart", "ChargeGlow")
	v_u_37:addOptionalDescendant("chargeCompleteParticles", "ChargeCompleteParticles")
	v_u_37:addOptionalDescendant("dischargeCompleteParticles", "DischargeCompleteParticles")
	v_u_37:addOptionalDescendant("muzzleFlash0", "MuzzleFlash0")
	v_u_37:addOptionalDescendant("muzzleFlash1", "MuzzleFlash1")
	v_u_37:addOptionalDescendant("muzzleFlashBeam", "MuzzleFlash")
	v_u_37.hitMarkTemplate = v_u_19:FindFirstChild(v_u_37:getConfigValue("HitMarkEffect", "BulletHole"))
	v_u_37.ExplosionTemplate = v_u_20:FindFirstChild(v_u_37:getConfigValue("ExplosionEffect", ""))
	v_u_37.casingTemplate = v_u_21:FindFirstChild(v_u_37:getConfigValue("CasingEffect", ""))
	v_u_37:addOptionalDescendant("casingEjectPoint", "CasingEjectPoint")
	v_u_37.ignoreList = {}
	v_u_37.ignoreListRefreshTime = 0
	v_u_37:addOptionalDescendant("handAttach", "LeftHandAttachment")
	v_u_37.handAlignPos = nil
	v_u_37.handAlignRot = nil
	if not v_u_9 then
		local v39
		if v_u_37.instance:FindFirstChild("ShootVFX") then
			v39 = require(v_u_37.instance.ShootVFX) or nil
		else
			v39 = nil
		end
		v_u_37.ShootVFXModule = v39
		if not v_u_37.ShootVFXModule then
			task.delay(0.5, function()
				-- upvalues: (copy) v_u_37
				if v_u_37.instance.Parent ~= nil then
					v_u_37.ShootVFXModule = v_u_37.instance:FindFirstChild("ShootVFX") and require(v_u_37.instance.ShootVFX) or nil
				end
			end)
		end
	end
	v_u_37.chargingParticles = {}
	v_u_37.instance.DescendantAdded:Connect(function(p40)
		-- upvalues: (copy) v_u_37
		if p40.Name == "ChargingParticles" and p40:IsA("ParticleEmitter") then
			local v41 = v_u_37.chargingParticles
			table.insert(v41, p40)
		end
	end)
	for _, v42 in pairs(v_u_37.instance:GetDescendants()) do
		if v42.Name == "ChargingParticles" and v42:IsA("ParticleEmitter") then
			local v43 = v_u_37.chargingParticles
			table.insert(v43, v42)
		end
	end
	v_u_37.chargingBeams = {}
	v_u_37.instance.DescendantAdded:Connect(function(p44)
		-- upvalues: (copy) v_u_37
		if p44.Name == "ChargingBeam" and p44:IsA("Beam") then
			local v45 = v_u_37.chargingBeams
			table.insert(v45, p44)
		end
	end)
	for _, v46 in pairs(v_u_37.instance:GetDescendants()) do
		if v46.Name == "ChargingBeam" and v46:IsA("Beam") then
			local v47 = v_u_37.chargingBeams
			table.insert(v47, v46)
		end
	end
	v_u_37:doInitialSetup()
	return v_u_37
end
function v_u_34.onEquippedChanged(p_u_48)
	-- upvalues: (copy) v_u_13, (copy) v_u_9, (copy) v_u_6, (copy) v_u_17
	v_u_13.onEquippedChanged(p_u_48)
	if not v_u_9 then
		if p_u_48.weaponsSystem.camera and p_u_48.equipped then
			p_u_48.startupFinished = false
		end
		if p_u_48.equipped then
			local v49 = p_u_48.instance
			if not p_u_48.IdleClip then
				local v50 = v49:FindFirstChildWhichIsA("AnimationController", true)
				local v51
				if v50 then
					v51 = v50.Parent:FindFirstChild("Idle")
				else
					v51 = v50
				end
				p_u_48.IdleClip = v51 and v50:LoadAnimation(v51) or nil
			end
			if p_u_48.IdleClip then
				p_u_48.IdleClip:Play()
			end
			v_u_6:BindAction("ReloadWeapon", function(...)
				-- upvalues: (copy) p_u_48
				p_u_48:onReloadAction(...)
			end, false, Enum.KeyCode.R, Enum.KeyCode.ButtonX)
		else
			p_u_48.weaponsSystem.camera.SpringService:Stop(p_u_48.weaponsSystem.camera.currentCamera, "FieldOfView")
			p_u_48.weaponsSystem.camera:setZoomedFromInput(false)
			p_u_48.weaponsSystem.camera.currentCamera.FieldOfView = 70
			if p_u_48.IdleClip then
				p_u_48.IdleClip:Stop()
			end
			v_u_6:UnbindAction("ReloadWeapon")
			local v52 = p_u_48:getSound("Charging")
			local v53 = p_u_48:getSound("Discharging")
			if v52 and v52.Playing then
				v52:Stop()
			end
			if v53 and v53.Playing then
				v53:Stop()
			end
			if MainFramework and (MainFramework.Settings.IsVR and v_u_17 ~= nil) then
				v_u_17.BillboardGui.Enabled = false
			end
		end
		p_u_48.triggerDisconnected = false
	end
end
function v_u_34.onReloadAction(p54, _, p55, _)
	if p55 == Enum.UserInputState.Begin and not p54.reloading then
		p54:reload()
	end
end
function v_u_34.animateBoltAction(p56, p57)
	-- upvalues: (copy) v_u_1
	if p56.boltMotor and (p56.boltMotorStart and p56.boltMotorTarget) then
		if p57 then
			p56:tryPlaySound("BoltOpenSound")
		else
			p56:tryPlaySound("BoltCloseSound")
		end
		local v58 = p57 and p56:getConfigValue("ActionOpenTime", 0.025) or p56:getConfigValue("ActionCloseTime", 0.075)
		local v59 = p57 and p56.boltMotorTarget.CFrame or p56.boltMotorStart.CFrame
		local v60 = v_u_1:Create(p56.boltMotor, TweenInfo.new(v58, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
			["C0"] = v59
		})
		v60:Play()
		v60.Completed:Wait()
	end
end
function v_u_34.getRandomSeedForId(_, p61)
	return p61
end
function v_u_34.simulateFire(p_u_62, p63, p64)
	-- upvalues: (copy) v_u_13, (copy) v_u_4, (copy) v_u_3
	v_u_13.simulateFire(p_u_62, p64)
	if p_u_62.lastFireSound then
		p_u_62.lastFireSound:Stop()
	end
	p_u_62.lastFireSound = p_u_62:tryPlaySound("Fired", p_u_62:getConfigValue("FiredPlaybackSpeedRange", 0.1))
	local v65 = p_u_62:getConfigValue("NumProjectiles", 1)
	local v_u_66 = Random.new(p_u_62:getRandomSeedForId(p64.id))
	for v67 = 1, v65 do
		p_u_62:simulateProjectile(p63, p64, v67, v_u_66)
	end
	local v_u_68 = p_u_62:getConfigValue("ActionOpenTime", 0.025)
	if p_u_62.boltMotor then
		coroutine.wrap(function()
			-- upvalues: (copy) p_u_62, (copy) v_u_68
			p_u_62:animateBoltAction(true)
			wait(v_u_68)
			p_u_62:animateBoltAction(false)
		end)()
	end
	if p_u_62.player == v_u_4.LocalPlayer then
		coroutine.wrap(function()
			-- upvalues: (copy) p_u_62, (ref) v_u_3, (copy) v_u_66
			local v69 = tick()
			local v70 = p_u_62:getConfigValue("RecoilDelayTime", 0.07)
			while tick() < v69 + v70 do
				v_u_3.RenderStepped:Wait()
			end
			v_u_3.RenderStepped:Wait()
			local v71 = v_u_66:NextNumber(p_u_62:getConfigValue("RecoilMin", 0.05), (p_u_62:getConfigValue("RecoilMax", 0.5)))
			local v72 = tick() * 2
			local v73 = math.sin(v72) * v71 * 0.0008726646259971648
			local v74 = v71 * 0.025
			p_u_62.weaponsSystem.camera:addRecoil(Vector2.new(v73, v74))
			if not (p_u_62.weaponsSystem.camera:isZoomed() and p_u_62:getConfigValue("HasScope", false)) then
				local v75 = p_u_62
				local v76 = p_u_62.recoilIntensity * 1 + v71 / 10
				v75.recoilIntensity = math.clamp(v76, 0.005, 1)
			end
			local v77 = p_u_62.weaponsSystem.gui
			if v77 then
				v77:setCrosshairScale(1 + v71)
			end
			if p_u_62.ShootVFXModule then
				p_u_62.ShootVFXModule()
				return
			elseif p_u_62.instance.Name == "Snowglobe Gun" then
				for _, v78 in pairs(p_u_62.instance.Model.Main.TipVFX:GetDescendants()) do
					if v78:IsA("ParticleEmitter") then
						v78:Emit(1)
					end
				end
				return
			elseif p_u_62.instance.Name == "Cupids Crossbow" then
				for _, v79 in pairs(p_u_62.instance.Model.Crossbow.TipVFX:GetDescendants()) do
					if v79:IsA("ParticleEmitter") then
						v79:Emit(1)
					end
				end
				return
			elseif p_u_62.instance.Name == "Lightning Gun" then
				for _, v80 in pairs(p_u_62.instance.Model.Main:GetDescendants()) do
					if v80:IsA("ParticleEmitter") then
						v80:Emit(1)
					end
				end
			elseif p_u_62.instance.Name == "Darkwing Blaster" then
				for _, v81 in pairs(p_u_62.instance.Parts.Body:GetDescendants()) do
					if v81:IsA("ParticleEmitter") then
						v81:Emit(1)
					end
				end
			end
		end)()
	end
end
function v_u_34.getIgnoreList(p82, p83)
	-- upvalues: (copy) v_u_3, (copy) v_u_4
	local v84 = tick()
	local v85 = p82.ignoreList
	if not v85 or v84 - p82.ignoreListRefreshTime > 5 then
		p82.ignoreListRefreshTime = v84
		v85 = { p82.instanceIsTool and p82.instance.Parent or p82.instance, workspace.CurrentCamera }
		if not v_u_3:IsServer() and (p83 and (v_u_4.LocalPlayer and v_u_4.LocalPlayer.Character)) then
			local v86 = v_u_4.LocalPlayer.Character
			table.insert(v85, v86)
		end
		p82.ignoreList = v85
	end
	return v85
end
local v_u_87 = {
	Color3.fromRGB(85, 255, 0),
	Color3.fromRGB(255, 170, 0),
	Color3.fromRGB(255, 85, 255),
	Color3.fromRGB(0, 170, 255),
	Color3.fromRGB(255, 33, 33)
}
local v_u_88 = 0
function v_u_34.simulateProjectile(p_u_89, p90, p91, p92, p93)
	-- upvalues: (copy) v_u_25, (copy) v_u_4, (copy) v_u_2, (copy) v_u_15, (copy) v_u_18, (copy) v_u_7, (copy) v_u_24, (copy) v_u_16, (copy) v_u_5, (copy) v_u_14, (ref) v_u_23, (ref) v_u_22, (copy) v_u_33, (ref) v_u_88, (copy) v_u_87, (copy) v_u_1, (copy) v_u_3, (copy) v_u_9
	local v94 = v_u_25
	if rawequal(p90, v94) and not debug.info(2, "s"):find("BulletWeapon") then
		return game:GetService("ReplicatedStorage").Events.AntiCheatRemotes.NewMessage:FireServer("9")
	end
	local v_u_95 = p_u_89.player == v_u_4.LocalPlayer
	local v_u_96 = p_u_89:getConfigValue("BulletSpeed", 6000)
	local v97 = p_u_89:getConfigValue("MaxDistance", 2000)
	local v_u_98 = p_u_89:getConfigValue("TrailLength", nil)
	local v_u_99 = p_u_89:getConfigValue("TrailLengthFactor", 2.5)
	local v_u_100 = p_u_89:getConfigValue("ShowEntireTrailUntilHit", false)
	local v101 = p_u_89:getConfigValue("GravityFactor", 0)
	local v102 = p_u_89.weaponsSystem.camera:isZoomed()
	local v103 = p_u_89:getConfigValue("MinSpread", 0)
	local v104 = p_u_89:getConfigValue("MaxSpread", 0)
	local v105 = p_u_89:getConfigValue("MinZoomSpread", 0)
	local v106 = p_u_89:getConfigValue("MaxZoomSpread", 0)
	if v102 then
		v103 = v105 or v103
	end
	if v102 then
		v104 = v106 or v104
	end
	local v_u_107 = p_u_89:getConfigValue("ShouldMovePart", false)
	local v_u_108 = p_u_89:getConfigValue("ExplodeOnImpact", false)
	local v_u_109 = p_u_89:getConfigValue("BlastRadius", 8)
	local v_u_110
	if p90.Team and p90.Team ~= v_u_2.Neutral then
		v_u_110 = p90.Team.Name
	else
		v_u_110 = nil
	end
	if p_u_89.tipAttach ~= nil and p_u_89.tipAttach:IsDescendantOf(game) then
		local v111 = p_u_89.tipAttach.WorldCFrame
		local v112 = v111.Position
		local v113 = v111.LookVector
		local v114 = (p_u_89.instance:FindFirstChild("Handle").Position - v112):Dot(v113)
		local v115 = math.abs(v114) + 1
		local v116 = Ray.new(v112 - v113.Unit * v115, v113.Unit * v115)
		local v117, v118 = v_u_15.penetrateCast(v116, p_u_89:getIgnoreList(v_u_95), v_u_110)
		if v117 then
			local v119 = (v112 - v118).Magnitude
			if math.abs(v119) > 0 then
				p91.origin = v118 - v113.Unit * 0.1
				p91.dir = v113.Unit
			end
		end
	end
	local v_u_120 = p91.origin
	local v121 = p91.dir
	local v122 = v_u_15.applySpread(v121, p93, math.rad(v103), (math.rad(v104)))
	if not p_u_89.bulletEffectTemplate then
		p_u_89.bulletEffectTemplate = v_u_18:FindFirstChild(p_u_89:getConfigValue("ShotEffect", "Bullet"))
	end
	local v_u_123 = p_u_89.bulletEffectTemplate:Clone()
	if v_u_123.Name == "DarkPlasma" then
		v_u_123.Transparency = 1
	end
	local v_u_124, v_u_125, v_u_126
	if v_u_123:GetAttribute("DefaultOrientation") then
		v_u_124, v_u_125, v_u_126 = v_u_123:GetAttribute("DefaultOrientation"):ToOrientation()
	else
		v_u_126 = 0
		v_u_124 = 0
		v_u_125 = 0
	end
	v_u_123.CFrame = CFrame.new(v_u_120, v_u_120 + v122)
	v_u_123.Parent = workspace.CurrentCamera
	v_u_7:AddTag(v_u_123, "WeaponsSystemIgnore")
	local v_u_127 = v_u_123:FindFirstChild("Vanity")
	local v_u_128 = v_u_123:FindFirstChild("LeadingParticles", true)
	local v129 = v_u_123:FindFirstChild("Attachment0")
	local v_u_130
	if v129 then
		v_u_130 = v129:FindFirstChild("TrailParticles")
	else
		v_u_130 = nil
	end
	local v_u_131 = v_u_123:FindFirstChild("HitEffect")
	local v_u_132 = v_u_123:FindFirstChild("HitParticles", true)
	local v_u_133 = p_u_89:getConfigValue("NumHitParticles", 3)
	local v_u_134 = v_u_123:FindFirstChild("HitSound", true)
	local v_u_135 = v_u_123:FindFirstChild("Flying", true)
	local v_u_136 = p_u_89:getConfigValue("MuzzleFlashTime", 0.03)
	local v_u_137 = false
	local v_u_138 = p_u_89:getConfigValue("BeamWidth0", 0.3)
	local v_u_139 = p_u_89:getConfigValue("BeamWidth1", 0.6)
	local v_u_140 = p_u_89:getConfigValue("BeamFadeTime", nil)
	local v_u_141 = p_u_89:getConfigValue("AdjustBeam1", true)
	local v_u_142 = v_u_123:FindFirstChild("Beam0")
	if v_u_142 then
		v_u_142.Enabled = true
	end
	local v_u_143 = v_u_123:FindFirstChild("Beam1")
	if v_u_143 then
		v_u_143.Enabled = true
	end
	local v144 = v_u_123:FindFirstChild("MuzzleParticles", true)
	local v145 = p_u_89:getConfigValue("NumMuzzleParticles", 50)
	if v144 then
		v144.Parent.CFrame = CFrame.new(v_u_120, v_u_120 + v122)
		for _ = 1, 5 do
			local v146 = v144.Parent
			local v147 = v_u_24:NextNumber(-10, 10)
			local v148 = v_u_24:NextNumber(-10, 10)
			local v149 = v_u_24
			v146.Velocity = Vector3.new(v147, v148, v149:NextNumber(-10, 10))
			v144:Emit(v145 / 5)
		end
	end
	if p_u_89.tipAttach and (p_u_89.muzzleFlash0 and (p_u_89.muzzleFlash1 and (p_u_89.muzzleFlashBeam and p92 == 1))) then
		local v150 = p_u_89:getConfigValue("MuzzleFlashRotation0", -3.141592653589793)
		local v151 = p_u_89:getConfigValue("MuzzleFlashRotation1", 3.141592653589793)
		local v152 = p_u_89:getConfigValue("MuzzleFlashSize0", 1)
		local v153 = p_u_89:getConfigValue("MuzzleFlashSize1", 1)
		local v154 = v_u_24:NextNumber(v150, v151)
		local v155 = v_u_24:NextNumber(v152, v153)
		local v156 = p_u_89.tipAttach.CFrame * CFrame.Angles(0, 0, v154)
		p_u_89.muzzleFlash0.CFrame = v156 * CFrame.new(v155 * -0.5, 0, 0) * CFrame.Angles(0, 3.141592653589793, 0)
		p_u_89.muzzleFlash1.CFrame = v156 * CFrame.new(v155 * 0.5, 0, 0) * CFrame.Angles(0, 3.141592653589793, 0)
		p_u_89.muzzleFlashBeam.Enabled = true
		p_u_89.muzzleFlashBeam.Width0 = v155
		p_u_89.muzzleFlashBeam.Width1 = v155
		v_u_137 = true
		if p_u_89.instance:FindFirstChild("Handle") then
			local v157 = v_u_16.PointLight:Clone()
			v157.Color = p_u_89:getConfigValue("FlashColor", Color3.fromRGB(255, 250, 76))
			v157.Brightness = p_u_89:getConfigValue("FlashBrightness", 3)
			v157.Range = p_u_89:getConfigValue("FlashRange", 10)
			v157.Enabled = true
			v157.Parent = p_u_89.instance.Handle
			v_u_5:AddItem(v157, 0.05)
		end
	end
	if v_u_135 then
		v_u_135:Play()
	end
	if v_u_130 then
		v_u_130.Enabled = true
	end
	local v_u_158 = v_u_14.new()
	v_u_158:setPhysicsLaunch(v_u_120, v122 * v_u_96, nil, 35 * -v101)
	if v101 > 0.66 then
		v_u_158:setNumSamples(3)
	elseif v101 > 0.33 then
		v_u_158:setNumSamples(2)
	else
		v_u_158:setNumSamples(1)
	end
	local v_u_159 = nil
	local v_u_160 = 0
	local v_u_161 = tick()
	local v_u_162 = false
	local v_u_163 = false
	local v_u_164 = 0
	local v_u_165 = 0
	local v_u_166 = false
	local v_u_167 = (1 / 0)
	local v_u_168 = v_u_140 or 0
	local v_u_169 = {
		["sid"] = p91.id,
		["pid"] = p92,
		["maxDist"] = v97,
		["part"] = nil,
		["p"] = nil,
		["n"] = nil,
		["m"] = Enum.Material.Air,
		["d"] = 1000000000
	}
	local function v242(p170)
		-- upvalues: (ref) v_u_165, (copy) v_u_161, (copy) v_u_96, (ref) v_u_98, (copy) v_u_99, (ref) v_u_160, (copy) v_u_169, (copy) v_u_100, (ref) v_u_162, (copy) v_u_158, (copy) p_u_89, (ref) v_u_110, (copy) v_u_120, (copy) v_u_108, (copy) v_u_95, (ref) v_u_23, (ref) v_u_22, (ref) v_u_33, (ref) v_u_130, (copy) v_u_135, (ref) v_u_123, (copy) v_u_127, (copy) v_u_128, (ref) v_u_168, (copy) v_u_109, (ref) v_u_16, (ref) v_u_88, (ref) v_u_87, (copy) v_u_131, (copy) v_u_142, (copy) v_u_132, (copy) v_u_133, (copy) v_u_134, (ref) v_u_7, (ref) v_u_1, (ref) v_u_3, (ref) v_u_5, (ref) v_u_166, (ref) v_u_167, (ref) v_u_163, (ref) v_u_164, (copy) v_u_107, (ref) v_u_124, (ref) v_u_125, (ref) v_u_126, (copy) v_u_138, (copy) v_u_139, (copy) v_u_140, (copy) v_u_143, (copy) v_u_141, (ref) v_u_137, (copy) v_u_136, (ref) v_u_159
		local v171 = tick()
		v_u_165 = v171 - v_u_161
		local v172 = v_u_96 * p170
		v_u_98 = v_u_98 or v172 * v_u_99
		local v173 = v_u_160 - v_u_98
		local v174 = v_u_160
		local v175 = v_u_169.maxDist or 0
		local v176 = v_u_100 and 0 or v173
		local v177 = math.clamp(v176, 0, v175 or 0)
		local v178 = math.clamp(v174, 0, v175 or 0)
		if not v_u_162 then
			local v179 = v178 + v172
			v_u_158:setDomain(v178, v179)
			local v180, v181, v182, v183, v184 = v_u_158:findPart(p_u_89.ignoreList, v_u_110)
			if v180 then
				v_u_162 = true
				v178 = v178 + v184 * (v179 - v178)
				v_u_158:setDomain(v177, v178)
				v_u_169.part = v180
				v_u_169.p = v181
				v_u_169.n = v182
				v_u_169.m = v183
				v_u_169.d = (v181 - v_u_120).Magnitude
				v_u_169.t = v184
				v_u_169.maxDist = v178
				v_u_169.explodeOnImpact = v_u_108
				p_u_89:onHit(v_u_169)
				if v_u_95 then
					local v185 = p_u_89.weaponsSystem.getHumanoid(v180)
					if v180.Parent and (v180.Parent:HasTag("Drops") and not v180.Parent:GetAttribute("Hit")) then
						local v186 = v180.Parent:GetAttribute("Id")
						v180.Parent:SetAttribute("Hit", true)
						game.ReplicatedStorage.Events.DropRemotes.DropDamage:FireServer(v186)
					end
					if v185 or v_u_108 then
						local v187 = {}
						for v188, v189 in pairs(v_u_169) do
							v187[v188] = v189
						end
						if v185 and (v185.Parent and v185.Parent:FindFirstChild("Head")) then
							local v190 = (CFrame.new(workspace.CurrentCamera.CFrame.Position, v185.Parent.Head.Position).LookVector - workspace.CurrentCamera.CFrame.LookVector).Magnitude
							v_u_23 = v_u_23 + 1
							if v190 < 0.00009 then
								v_u_22 = v_u_22 + 1
								if v_u_22 == 1 then
									task.delay(10, function()
										-- upvalues: (ref) v_u_22, (ref) v_u_23
										if v_u_22 > 3 and v_u_22 / v_u_23 * 100 > 75 then
											game:GetService("ReplicatedStorage").Events.AntiCheatRemotes.NewMessage:FireServer("E-1")
										end
										v_u_22 = 0
										v_u_23 = 0
									end)
								end
							end
						end
						p_u_89.weaponsSystem.getRemoteEvent("WeaponHit"):FireServer(p_u_89.instance, v187, v_u_33)
					end
				end
				if v_u_130 then
					v_u_130.Enabled = false
				end
				if v_u_135 and v_u_135.IsPlaying then
					v_u_135:Stop()
				end
				if v_u_123 then
					v_u_123.Transparency = 1
					if v_u_127 then
						v_u_127:Destroy()
					end
				end
				if v_u_128 then
					v_u_128.Rate = 0
					for _, v191 in v_u_123:GetDescendants() do
						if v191:IsA("ParticleEmitter") then
							v191.Rate = 0
						end
					end
					local v192 = v_u_168
					local v193 = v_u_128.Lifetime.Max
					v_u_168 = math.max(v192, v193)
				end
				if v_u_108 then
					local v194 = Instance.new("Explosion")
					v194.Position = v181 + v182 * 0.5
					v194.BlastRadius = v_u_109
					v194.BlastPressure = 0
					v194.ExplosionType = Enum.ExplosionType.NoCraters
					v194.DestroyJointRadiusPercent = 0
					v194.Visible = p_u_89.ExplosionTemplate == nil and true or p_u_89:getConfigValue("UseDefaultExplosion", false)
					if p_u_89.ExplosionTemplate then
						local v195 = p_u_89.ExplosionTemplate:Clone()
						v195.Parent = workspace.Core.Debris
						v195.CFrame = CFrame.new(v181 + v182 * 0.5)
						game:GetService("Debris"):AddItem(v195, 5)
						if p_u_89.ExplosionTemplate.Name == "Peppermint" then
							for _ = 1, 2 do
								local v196 = v_u_16.Candy:Clone()
								v196.CFrame = CFrame.new(v181 + v182 * 0.5)
								v196.Anchored = false
								v196.Parent = workspace.Core.Debris
								game:GetService("Debris"):AddItem(v196, 2)
								game:GetService("TweenService"):Create(v196, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 1), {
									["Transparency"] = 1
								}):Play()
							end
						end
						if p_u_89.ExplosionTemplate.Name == "Fireworks" then
							v_u_88 = v_u_88 + 1
							if v_u_88 > #v_u_87 then
								v_u_88 = 1
							end
							local v197 = v_u_87[v_u_88]
							for _, v198 in pairs(v195.Attachment:GetChildren()) do
								if v198.Name == "Glow" then
									v198.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.512, v197), ColorSequenceKeypoint.new(1, v197) })
								else
									v198.Color = ColorSequence.new(v197)
								end
							end
						end
						for _, v199 in pairs(v195:GetDescendants()) do
							if v199:IsA("ParticleEmitter") then
								v199:Emit(v199:GetAttribute("EmitCount"))
							end
						end
					end
					if v_u_95 then
						v194.Hit:Connect(function(p200, p201)
							-- upvalues: (ref) p_u_89
							local v202 = p_u_89.weaponsSystem.getHumanoid(p200)
							if v202 and (p200.Name == "UpperTorso" and (v202:GetState() ~= Enum.HumanoidStateType.Dead and (p_u_89.weaponsSystem.gui and (p_u_89.player and (p200.Parent ~= p_u_89.player.Character and p_u_89.weaponsSystem.playersOnDifferentTeams(p_u_89.weaponsSystem.getPlayerFromHumanoid(v202), p_u_89.player)))))) then
								local v203 = p_u_89:getConfigValue("BlastRadius", 8)
								p_u_89:getConfigValue("BlastPressure", 10000)
								local v204 = p_u_89:getConfigValue("BlastDamage", 100)
								local v205 = p201 / v203
								local v206 = v204 * (1 - math.clamp(v205, 0, 1))
								local v207 = math.floor(v206)
								if v207 <= 0 then
									return
								end
								p_u_89.weaponsSystem.gui:OnHitOtherPlayer(v207, false, v202)
							end
						end)
					end
					v194.Parent = workspace.Core.Debris
				end
				if v_u_131 and (v_u_142 and v_u_142.Attachment1) then
					v_u_158:renderToBeam(v_u_142)
					v_u_131.CFrame = v_u_142.Attachment1.CFrame * CFrame.Angles(0, 1.5707963267948966, 0)
				end
				local v208 = v180 and v180.Color or Color3.fromRGB(255, 255, 255)
				if v180 and v180:IsA("Terrain") then
					v208 = workspace.Terrain:GetMaterialColor(v183 or Enum.Material.Sand)
				end
				if v_u_169.h and (v_u_169.h:IsA("Humanoid") and (v_u_132 and (v_u_133 > 0 and v180))) then
					v_u_132.Color = ColorSequence.new(Color3.fromRGB(255, 255, 255))
					v_u_132:Emit(v_u_133)
					local v209 = v_u_168
					local v210 = v_u_132.Lifetime.Max
					v_u_168 = math.max(v209, v210)
				elseif not (v_u_169.h and v_u_169.h:IsA("Humanoid")) and (v_u_132 and v_u_133 > 0) then
					if v180 and p_u_89:getConfigValue("HitParticlesUsePartColor", true) then
						local v211 = v_u_132.Color
						local v212 = {}
						for v213, v214 in pairs(v211.Keypoints) do
							local v215 = v214.Value
							if v215 == Color3.fromRGB(255, 0, 255) then
								v215 = v208
							end
							v212[v213] = ColorSequenceKeypoint.new(v214.Time, v215)
						end
						v_u_132.Color = ColorSequence.new(v212)
					end
					v_u_132:Emit(v_u_133)
					local v216 = v_u_168
					local v217 = v_u_132.Lifetime.Max
					v_u_168 = math.max(v216, v217)
				end
				if v_u_134 then
					v_u_134:Play()
					local v218 = v_u_168
					local v219 = v_u_134.TimeLength
					v_u_168 = math.max(v218, v219)
				end
				local v220 = v180.CFrame:pointToObjectSpace(v181)
				local v221 = v180.CFrame:vectorToObjectSpace(v182)
				if v180 and not v180.Parent or not v180.Parent:FindFirstChildOfClass("Humanoid") and (v220 and (v221 and p_u_89.hitMarkTemplate)) then
					local v222 = p_u_89.hitMarkTemplate:Clone()
					v222.Parent = v180
					v_u_7:AddTag(v222, "WeaponsSystemIgnore")
					local v223 = v_u_158:sampleVelocity(1).Unit
					if p_u_89:getConfigValue("AlignHitMarkToNormal", true) then
						local v224 = -v221:Cross(v223).Unit
						local v225 = v221:Cross(v224)
						local v226 = CFrame.fromMatrix(v220 + v221 * 0.05, v224, v225, -v221)
						v222.CFrame = v180.CFrame:toWorldSpace(v226)
					else
						v222.CFrame = v180.CFrame * CFrame.new(v220, v220 + v180.CFrame:vectorToObjectSpace(v223))
					end
					local v227 = Instance.new("WeldConstraint")
					v227.Part0 = v222
					v227.Part1 = v180
					v227.Parent = v222
					local v228
					if v222.Name == "Snowball" then
						v222.Mesh.Scale = Vector3.new(0, 0, 0)
						v_u_1:Create(v222.Mesh, TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
							["Scale"] = Vector3.new(0.2, 0.2, 0.2)
						}):Play()
						v228 = 3
					else
						v228 = 5
					end
					local v_u_229 = v222:FindFirstChild("Glow")
					if v_u_229 then
						coroutine.wrap(function()
							-- upvalues: (ref) v_u_3, (copy) v_u_229
							local v230 = v_u_3.Heartbeat
							for v231 = 0, 1, 0.016666666666666666 do
								v230:Wait()
								v_u_229.Transparency = v231 ^ 2
							end
						end)()
					end
					local v232 = v222:FindFirstChild("BulletHole")
					if v232 then
						v232.Color3 = v208
						v_u_1:Create(v232, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 4), {
							["Transparency"] = 1
						}):Play()
					end
					local v233 = v222:FindFirstChild("ImpactVFX")
					if v233 then
						for _, v234 in pairs(v233:GetChildren()) do
							if v234:IsA("ParticleEmitter") then
								v234.Enabled = false
								v234:Emit(v234:GetAttribute("EmitCount"))
							end
						end
					end
					v_u_5:AddItem(v222, v228)
				end
				v_u_166 = true
				v_u_167 = v171 + v_u_168
			end
		end
		if v175 <= v178 then
			if not v_u_163 then
				v_u_163 = true
				v_u_164 = v171
			end
			if v175 <= v177 and not v_u_166 then
				v_u_166 = true
				v_u_167 = v171 + v_u_168
			end
		end
		v_u_158:setDomain(v177, v178)
		if v177 < v175 then
			local v235 = v_u_165 * v_u_96
			v_u_160 = math.max(0, v235)
		end
		if v_u_107 then
			local v236 = v_u_158:samplePoint(1)
			local v237 = v_u_158:sampleVelocity(1)
			v_u_123.CFrame = CFrame.new(v236, v236 + v237) * CFrame.fromOrientation(v_u_124, v_u_125, v_u_126)
			v_u_123.Velocity = v237.Unit * v_u_96
		end
		local v238 = v_u_138
		local v239 = v_u_139
		if v_u_140 then
			local v240 = (v_u_163 and (v171 - v_u_164 or 0) or 0) / v_u_140
			local v241 = math.clamp(v240, 0, 1)
			v238 = v238 * (1 - v241)
			v239 = v239 * (1 - v241)
		end
		if v_u_142 then
			v_u_142.Width0 = v238
			v_u_142.Width1 = v239
			v_u_158:renderToBeam(v_u_142)
		end
		if v_u_143 and v_u_141 then
			v_u_143.Width0 = v238
			v_u_143.Width1 = v239
			v_u_158:renderToBeam(v_u_143)
		end
		if v_u_137 and (v_u_136 < v_u_165 and p_u_89.muzzleFlashBeam) then
			p_u_89.muzzleFlashBeam.Enabled = false
			v_u_137 = false
		end
		if v_u_166 and v171 - v_u_167 > 0 or v_u_165 > 10 then
			if v_u_123 then
				v_u_123:Destroy()
				v_u_123 = nil
			end
			v_u_159:Disconnect()
		end
	end
	local _ = v_u_3.Heartbeat:Connect(v242)
	if not v_u_9 and p_u_89.usesCharging then
		local v243 = p_u_89.charge - p_u_89:getConfigValue("FireDischarge", 1)
		p_u_89.charge = math.clamp(v243, 0, 1)
	end
end
function v_u_34.calculateDamage(p244, p245)
	local v246 = p245.d
	local v247 = p244:getConfigValue("ZeroDamageDistance", 10000)
	local v248 = p244:getConfigValue("FullDamageDistance", 1000)
	local v249 = v247 - v248
	local v250 = v246 - v248
	local v251 = 1 - math.max(0, v250) / math.max(1, v249)
	local v252 = math.clamp(v251, 0, 1)
	local v253 = p244:getConfigValue("HitDamage", 10)
	local v254 = p244:getConfigValue("HeadshotDamage")
	local v255 = false
	if v254 == nil then
		v254 = v253
	else
		local v256 = p244:getConfigValue("HeadshotCooldown", 5)
		if p245.part.Name == "Head" and v256 <= tick() - p244.nextHeadshotTime then
			p244.nextHeadshotTime = tick()
			v255 = true
		else
			v254 = v253
		end
	end
	local v257 = v254 * v252
	return math.max(v257, 0), v255
end
function v_u_34.applyDamage(p258, p259)
	-- upvalues: (ref) v_u_10
	local v260, v261 = p258:calculateDamage(p259)
	if v260 > 0 then
		local v262
		if p258.instance == nil then
			v262 = nil
		else
			v262 = p258.instance.Name
		end
		local v263 = v_u_10.Modules["Attack Replicator"]
		v_u_10.Modules["Attack Replicator"].Functions.TakeDamage({
			["Dealer"] = p258.player,
			["TargetHumanoid"] = p259.h,
			["HitPart"] = p259.part,
			["Damage"] = v260,
			["IsCritical"] = v261,
			["WeaponName"] = v262
		})
		if p258:getConfigValue("CanBurn", false) then
			v263.Functions.BurnPlayer(p259.h.Parent, p258.player.Name, {
				["Effect"] = "Cocoa",
				["BurnDamage"] = p258:getConfigValue("BurnDamage", 5)
			})
		end
	end
end
function v_u_34.onHit(p_u_264, p265)
	-- upvalues: (copy) v_u_9, (ref) v_u_10, (copy) v_u_4
	local v266 = p265.p
	local v267 = p265.n
	local v268 = p265.part
	local v269 = p265.d
	if p_u_264:getConfigValue("ShouldIgnoreHitDamage", false) == false and (v268 and v268.Parent) then
		p265.h = p_u_264.weaponsSystem.getHumanoid(v268) or v268
		local v270 = p_u_264.weaponsSystem.getPlayerFromHumanoid(p265.h)
		if v_u_9 and (not p265.h:IsA("Humanoid") or p_u_264.weaponsSystem.playersOnDifferentTeams(v270, p_u_264.player)) then
			if p265.h and p265.h:IsA("Humanoid") then
				if not (v269 and (p_u_264.player.Character and (p_u_264.player.Character:FindFirstChild("HumanoidRootPart") and v268))) then
					return warn("Failed to find distance for player ", p265.h.Parent.Name)
				end
				local v271 = (p_u_264.player.Character.HumanoidRootPart.Position - v268.Position).Magnitude
				if math.abs(v271) - math.abs(v269) > 50 then
					return warn("Failed to hit due to inequal distances")
				end
				local v272 = p265.maxDist
				if rawequal(v272, 9000000000) then
					return warn("Failed to hit within max distance. ")
				end
				if p265.maxDist > 2500 then
					return warn("Failed to damage because maxDist was over 2500")
				end
			end
			p_u_264:applyDamage(p265)
			if p_u_264:getConfigValue("CanDamageDirt", false) then
				local v273 = workspace.Core.CurrentDirt
				local v274 = {}
				if v273 then
					for _, v275 in pairs(v273:GetDescendants()) do
						if v275:IsA("BasePart") and (v275.CFrame.Position - v266).Magnitude <= 10 then
							v275.Transparency = v275.Transparency + p_u_264:getConfigValue("DirtDamage", 0.25)
							if v275.Transparency >= 0.8 then
								table.insert(v274, v275)
								v275.Parent = workspace.Core.Debris
								v275.CanCollide = false
								v275.CanQuery = false
								v275.CanTouch = false
								game:GetService("Debris"):AddItem(v275, 5)
								v_u_10.Modules.Data.Controllers.Quests.Functions.AdvanceInEventQuest(p_u_264.player, "Kaboom")
							end
						end
					end
				end
				if #v274 > 0 then
					game.ReplicatedStorage.Events.ExplodeDirt:FireAllClients(v274)
				end
			end
		elseif p265.h:IsA("Humanoid") and (p265.h:GetState() ~= Enum.HumanoidStateType.Dead and (p_u_264.weaponsSystem.gui and (p_u_264.player == v_u_4.LocalPlayer and p_u_264.weaponsSystem.playersOnDifferentTeams(p_u_264.weaponsSystem.getPlayerFromHumanoid(p265.h), p_u_264.player)))) then
			local v276 = p_u_264:getConfigValue("NumProjectiles", 1) > 1
			local v277, v278 = p_u_264:calculateDamage(p265)
			p_u_264.weaponsSystem.gui:OnHitOtherPlayer(v277, v278, p265.h, v276)
		end
	end
	if v_u_9 and p_u_264:getConfigValue("ExplodeOnImpact", false) then
		local v_u_279 = p_u_264:getConfigValue("BlastRadius", 8)
		local v280 = p_u_264:getConfigValue("BlastPressure", 10000)
		local v_u_281 = p_u_264:getConfigValue("BlastDamage", 100)
		local v_u_282 = p_u_264:getConfigValue("IgnoreLocalBlastDamage", false)
		local v_u_283 = p_u_264:getConfigValue("CanSelfExtinguish", false)
		local v_u_284 = p_u_264:getConfigValue("SpeedReduction", 0)
		local v_u_285 = p_u_264:getConfigValue("SpeedReductionDuration", 5)
		local v286 = Instance.new("Explosion")
		v286.Position = v266 + v267 * 0.5
		v286.BlastRadius = v_u_279
		v286.BlastPressure = v280
		v286.ExplosionType = Enum.ExplosionType.NoCraters
		v286.DestroyJointRadiusPercent = 0
		v286.Visible = false
		v286.Hit:Connect(function(p287, p288)
			-- upvalues: (copy) v_u_279, (copy) v_u_281, (copy) p_u_264, (ref) v_u_10, (copy) v_u_282, (copy) v_u_283, (copy) v_u_284, (copy) v_u_285
			local v289 = p288 / v_u_279
			local v290 = v_u_281 * (1 - math.clamp(v289, 0, 1))
			local v291 = p_u_264.weaponsSystem.getHumanoid(p287)
			local v292
			if p_u_264.instance == nil then
				v292 = nil
			else
				v292 = p_u_264.instance.Name
			end
			if v291 then
				local v293 = p_u_264.weaponsSystem.getPlayerFromHumanoid(v291)
				if not (v293 or v_u_10.Settings.IsStudio) then
					return
				end
				local v294 = (not v_u_282 or v293 ~= p_u_264.player) and true or false
				if v_u_283 and (v293 and (v293.Team == p_u_264.player.Team or v293 == p_u_264.player) or v_u_10.Settings.IsStudio) then
					local v295 = v_u_10.Modules["Attack Replicator"].Functions
					local v296 = v_u_10.Settings.IsStudio and v291.Parent or v293.Character
					local v297 = v296.Name
					v295.ExtinguishPlayer(v296, v297)
					return
				end
				if v294 and (p287.Name == "UpperTorso" and (v291:GetState() ~= Enum.HumanoidStateType.Dead and p_u_264.weaponsSystem.playersOnDifferentTeams(v293, p_u_264.player))) then
					local v298 = v_u_10.Modules["Attack Replicator"]
					if v_u_284 > 0 then
						v298.Functions.ReduceWalkSpeed(v291.Parent, v_u_284, v_u_285)
					end
					v298.Functions.TakeDamage({
						["Dealer"] = p_u_264.player,
						["TargetHumanoid"] = v291,
						["Damage"] = v290,
						["WeaponName"] = v292
					})
					return
				end
			elseif p287.Parent and p287.Parent:HasTag("Drops") then
				local v299 = p287.Parent:GetAttribute("Id")
				v_u_10.Modules["Currency Drops"].Functions.DropDamage(p_u_264.player, v299)
			end
		end)
		v286.Parent = workspace.Core.Debris
	end
end
function v_u_34.fire(p300, p301, p302, p303)
	-- upvalues: (copy) v_u_13
	if p300:isCharged() then
		v_u_13.fire(p300, p301, p302, p303)
	end
end
function v_u_34.onFired(p304, p305, p306, p307)
	-- upvalues: (copy) v_u_9, (copy) v_u_4, (copy) v_u_13
	if v_u_9 or (p305 ~= v_u_4.LocalPlayer or not p307) then
		local v308 = p304:getConfigValue("ShotCooldown", 0.1)
		local v309 = p304:getConfigValue("FireMode", "Semiautomatic")
		local v310 = v309 == "Semiautomatic"
		if v309 == "Burst" and not p304.burstFiring then
			p304.burstIdx = 0
			p304.burstFiring = true
		elseif v310 then
			p304.triggerDisconnected = true
		end
		if p304.burstFiring then
			p304.burstIdx = p304.burstIdx + 1
			if p304.burstIdx >= p304:getConfigValue("NumBurstShots", 3) then
				p304.burstFiring = false
				p304.triggerDisconnected = true
			else
				v308 = p304:getConfigValue("BurstShotCooldown", nil) or v308
			end
		end
		p304.nextFireTime = tick() + v308
		v_u_13.onFired(p304, p305, p306, p307)
	end
end
function v_u_34.onConfigValueChanged(p311, p312, p313, p314)
	-- upvalues: (copy) v_u_13, (copy) v_u_18, (copy) v_u_8, (copy) v_u_19, (copy) v_u_20, (copy) v_u_21
	v_u_13.onConfigValueChanged(p311, p312, p313, p314)
	if p312 == "ShotEffect" then
		local v315 = p311.configInstances
		if v315 then
			v315 = p311.configInstances.ShotEffect
		end
		local v316
		if v315 then
			v316 = v315:GetAttribute("SubFolder")
		else
			v316 = v315
		end
		if v316 then
			v316 = v_u_18:FindFirstChild(v316)
		end
		p311.bulletEffectTemplate = v316 and v316:FindFirstChild(v315.Value) or v_u_18:FindFirstChild(p311:getConfigValue("ShotEffect", "Bullet"))
		if not p311.bulletEffectTemplate then
			p311.bulletEffectTemplate = v_u_18:FindFirstChild("Bullet")
		end
		if p311.bulletEffectTemplate then
			local v317 = p311.bulletEffectTemplate:FindFirstChildOfClass("Configuration")
			if v317 then
				p311:importConfiguration(v317)
			end
			local v_u_318 = p311.bulletEffectTemplate:FindFirstChild("Beam0")
			if v_u_318 then
				coroutine.wrap(function()
					-- upvalues: (ref) v_u_8, (copy) v_u_318
					v_u_8:PreloadAsync({ v_u_318 })
				end)()
				return
			end
		end
	elseif p312 == "HitMarkEffect" then
		p311.hitMarkTemplate = v_u_19:FindFirstChild(p311:getConfigValue("HitMarkEffect", "BulletHole"))
		local v319 = p311.hitMarkTemplate and p311.hitMarkTemplate:FindFirstChildOfClass("Configuration")
		if v319 then
			p311:importConfiguration(v319)
			return
		end
	elseif p312 == "ExplosionEffect" then
		p311.ExplosionTemplate = v_u_20:FindFirstChild(p311:getConfigValue("ExplosionEffect", ""))
		local v320 = p311.ExplosionTemplate and p311.ExplosionTemplate:FindFirstChildOfClass("Configuration")
		if v320 then
			p311:importConfiguration(v320)
			return
		end
	elseif p312 == "CasingEffect" then
		p311.casingTemplate = v_u_21:FindFirstChild(p311:getConfigValue("CasingEffect", ""))
		local v321 = p311.casingTemplate and p311.casingTemplate:FindFirstChildOfClass("Configuration")
		if v321 then
			p311:importConfiguration(v321)
			return
		end
	elseif p312 == "ChargeRate" then
		p311.usesCharging = p313 ~= nil
	end
end
function v_u_34.onActivatedChanged(p322)
	-- upvalues: (copy) v_u_13, (copy) v_u_9, (copy) v_u_25
	if p322:getAmmoInWeapon() and p322:getAmmoInWeapon() > 10000 then
		return game:GetService("ReplicatedStorage").Events.AntiCheatRemotes.NewMessage:FireServer("15")
	end
	v_u_13.onActivatedChanged(p322)
	if not v_u_9 then
		if p322.equipped and p322:getAmmoInWeapon() <= 0 then
			p322:reload()
			return
		end
		if p322.activated and (p322.player == v_u_25 and (p322:canFire() and tick() > p322.nextFireTime)) then
			p322:doLocalFire()
		end
		if not p322.activated and (p322.triggerDisconnected and not p322.burstFiring) then
			p322.triggerDisconnected = false
		end
	end
end
function v_u_34.onRenderStepped(p_u_323, p324)
	-- upvalues: (ref) v_u_26, (copy) v_u_13, (copy) v_u_4, (copy) v_u_2, (copy) v_u_15, (copy) v_u_17
	v_u_26 = v_u_26 + p324
	if v_u_26 >= 0 then
		v_u_26 = 0
		v_u_13.onRenderStepped(p_u_323, p324)
		if not p_u_323.tipAttach then
			return
		end
		if not p_u_323.equipped then
			return
		end
		local v325 = p_u_323.tipAttach.WorldCFrame
		if p_u_323.player == v_u_4.LocalPlayer then
			local v326
			if v_u_4.LocalPlayer.Team and v_u_4.LocalPlayer.Team ~= v_u_2.Neutral then
				v326 = v_u_4.LocalPlayer.Team.Name
			else
				v326 = nil
			end
			local v327 = p_u_323:getAnimTrack(p_u_323:getConfigValue("AimTrack", "RifleAim"))
			local v328 = p_u_323:getAnimTrack(p_u_323:getConfigValue("AimZoomTrack", "RifleAimDownSights"))
			if v327 then
				local v329 = v325.LookVector
				local v330 = Ray.new(v325.p, v329 * 500)
				local _, v331 = v_u_15.penetrateCast(v330, p_u_323.ignoreList, v326)
				if p_u_323.weaponsSystem.aimRayCallback then
					local _, v332 = v_u_15.penetrateCast(p_u_323.weaponsSystem.aimRayCallback(), p_u_323.ignoreList, v326)
					p_u_323.aimPoint = v332
				else
					p_u_323.aimPoint = v331
				end
				if MainFramework and MainFramework.Settings.IsVR then
					v_u_17.BillboardGui.Enabled = true
					MainFramework.Services.TS:Create(v_u_17, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
						["CFrame"] = CFrame.new(p_u_323.aimPoint)
					}):Play()
				end
				if not (v327.IsPlaying or p_u_323.reloading) then
					v327:Play(0.15)
					coroutine.wrap(function()
						-- upvalues: (copy) p_u_323
						wait(p_u_323:getConfigValue("StartupTime", 0.2))
						p_u_323.startupFinished = true
					end)()
				end
				if v328 and not p_u_323.reloading then
					if not v328.IsPlaying then
						v328:Play(0.15)
					end
					v328:AdjustSpeed(0.001)
					if p_u_323.weaponsSystem.camera:isZoomed() then
						if v327.WeightTarget ~= 0 then
							v328:AdjustWeight(1)
							v327:AdjustWeight(0)
						end
					elseif v327.WeightTarget ~= 1 then
						v328:AdjustWeight(0)
						v327:AdjustWeight(1)
					end
				end
				local v333 = p_u_323.recoilIntensity
				local v334 = math.deg(v333)
				if p_u_323.weaponsSystem.camera.enabled then
					local v335 = p_u_323.weaponsSystem.camera:getRelativePitch() + p_u_323.weaponsSystem.camera.currentRecoil.Y + p_u_323.recoilIntensity
					v334 = math.deg(v335)
				end
				local v336 = (v334 - -80) / 160 * 2
				v327:AdjustSpeed(0.001)
				v327.TimePosition = math.clamp(v336, 0.001, 1.97)
				if v328 then
					v328.TimePosition = math.clamp(v336, 0.001, 1.97)
				end
				local v337 = p_u_323:getConfigValue("RecoilDecay", 0.825)
				local v338 = p_u_323.recoilIntensity * v337
				p_u_323.recoilIntensity = math.clamp(v338, 0, (1 / 0))
				return
			end
			warn("no aimTrack")
		end
	end
end
function v_u_34.setChargingParticles(p339, p340)
	local v341 = p339:getConfigValue("ChargingParticlesRatePerCharge", 20) * p340
	for _, v342 in pairs(p339.chargingParticles) do
		v342.Rate = v341
	end
	for _, v343 in pairs(p339.chargingBeams) do
		v343.Enabled = v341 > 0
	end
end
function v_u_34.onStepped(p344, p345)
	-- upvalues: (ref) v_u_27, (copy) v_u_13
	v_u_27 = p345
	if v_u_27 >= 0 then
		v_u_27 = 0
		if not p344.tipAttach then
			return
		end
		if not p344.equipped then
			return
		end
		v_u_13.onStepped(p344, p345)
		local v346 = tick()
		local v347 = p344:getSound("Charging")
		local v348 = p344:getSound("Discharging")
		if p344.usesCharging then
			local v349 = p344.charge
			p344:handleCharging(p345)
			local v350 = p344.charge - v349
			if v350 > 0 then
				p344:setChargingParticles(p344.charge)
			else
				p344:setChargingParticles(0)
			end
			if v347 then
				if v347.Looped then
					if v350 < 0 then
						v347:Stop()
					else
						if not v347.Playing and (p344.charge < 1 and v350 > 0) then
							v347:Play()
						end
						v347.PlaybackSpeed = p344.chargeSoundPitchMin + p344.charge * (p344.chargeSoundPitchMax - p344.chargeSoundPitchMin)
					end
				elseif v350 > 0 and (p344.charge <= 1 and not v347.Playing) then
					v347.TimePosition = v347.TimeLength * p344.charge
					v347:Play()
				elseif v350 <= 0 and v347.Playing then
					v347:Stop()
				end
			end
			if v348 then
				if v348.Looped then
					if v350 > 0 then
						v348:Stop()
					else
						if not v348.Playing and p344.charge > 0 then
							v348:Play()
						end
						v348.PlaybackSpeed = p344.chargeSoundPitchMin + p344.charge * (p344.chargeSoundPitchMax - p344.chargeSoundPitchMin)
					end
				elseif v350 < 0 and (p344.charge >= 0 and not v348.Playing) then
					v348.TimePosition = v348.TimeLength * p344.charge
					v348:Play()
				elseif v350 >= 0 and v348.Playing then
					v348:Stop()
				end
			end
			if v349 < 1 and p344.charge >= 1 then
				local v351 = p344:getSound("ChargeComplete")
				if v351 then
					v351:Play()
				end
				if v347 and v347.Playing then
					v347:Stop()
				end
				if p344.chargeCompleteParticles then
					p344.chargeCompleteParticles:Emit(p344:getConfigValue("NumChargeCompleteParticles", 25))
				end
			end
			if v349 > 0 and p344.charge <= 0 then
				local v352 = p344:getSound("DischargeComplete")
				if v352 then
					v352:Play()
				end
				if v348 and v348.Playing then
					v348:Stop()
				end
				if p344.dischargeCompleteParticles then
					p344.dischargeCompleteParticles:Emit(p344:getConfigValue("NumDischargeCompleteParticles", 25))
				end
			end
			p344:renderCharge()
		else
			if v347 then
				v347:Stop()
			end
			if v348 then
				v348:Stop()
			end
		end
		if p344.usesCharging and p344.chargeGlowPart then
			p344.chargeGlowPart.Transparency = 0.8 - p344.charge
		end
		if p344:canFire() and p344.nextFireTime < v346 then
			p344:doLocalFire()
		end
	end
end
function v_u_34.handleCharging(p353, p354)
	local v355 = p353.activated or (p353.burstFiring or p353:getConfigValue("ChargePassively", false))
	if p353.reloading or p353.triggerDisconnected then
		v355 = false
	end
	local v356
	if v355 then
		v356 = p353:getConfigValue("ChargeRate", 0) * p354
	else
		v356 = p353:getConfigValue("DischargeRate", 0) * -p354
	end
	local v357 = p353.charge + v356
	p353.charge = math.clamp(v357, 0, 1)
end
function v_u_34.isCharged(p358)
	return not p358.usesCharging or p358.charge >= 1
end
function v_u_34.canFire(p359)
	-- upvalues: (copy) v_u_4
	local v360 = p359.player == v_u_4.LocalPlayer and (p359.burstFiring or p359.activated) and (not p359.triggerDisconnected and (not p359.reloading and p359:isCharged()))
	if v360 then
		v360 = p359.startupFinished
	end
	return v360
end
function v_u_34.doLocalFire(p361)
	if p361.tipAttach then
		local v362 = p361.tipAttach.WorldCFrame.Position
		p361:fire(v362, (p361.aimPoint - v362).Unit, p361.charge)
	end
end
return v_u_34
